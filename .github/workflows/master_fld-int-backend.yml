name: Backend Pipeline

on:
  workflow_dispatch:
    inputs:
      deploy_reason:
        description: "Reason for backend deployment"
        required: false
        default: "Manual deployment"
      confirm_deploy:
        description: 'Type "deploy" to confirm'
        required: true

concurrency:
  group: backend-deploy
  cancel-in-progress: true

jobs:
  build:
    if: ${{ github.event.inputs.confirm_deploy == 'deploy' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install, build, prune
        env:
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          APP_KEYS: ${{ secrets.APP_KEYS }}
          CLOUDINARY_KEY: ${{ secrets.CLOUDINARY_KEY }}
          CLOUDINARY_NAME: ${{ secrets.CLOUDINARY_NAME }}
          CLOUDINARY_SECRET: ${{ secrets.CLOUDINARY_SECRET }}
          DATABASE_CLIENT: ${{ secrets.DATABASE_CLIENT }}
          DATABASE_SSL: ${{ secrets.DATABASE_SSL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
        run: |
          cd backend
          npm install
          npm run build --if-present
          # npm prune --production

      - name: Create deployment zip
        run: |
          cd backend
          mkdir -p ../artifact
          zip -q -r ../artifact/app.zip . \
            -x "*/.git/*" "*/.github/*" "*/tests/*" "*/test/*" \
              "*/coverage/*" "*/node_modules/.cache/*" "*.log"


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app-zip
          path: artifact/app.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-zip
          path: ./deploy-dir

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "fld-int-backend"
          slot-name: "Production"
          package: ./deploy-dir/app.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DEF5A525A9E141E6BC3D22D11313A535 }}
